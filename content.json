{"meta":{"title":"印第安的老斑鸠","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2020-09-23T11:07:47.000Z","updated":"2020-09-24T13:17:07.273Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-09-23T11:44:47.000Z","updated":"2020-09-24T13:17:10.613Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Tensors Explained","slug":"Tensors-Explained","date":"2020-10-12T01:53:06.000Z","updated":"2020-10-12T02:33:41.322Z","comments":true,"path":"2020/10/12/Tensors-Explained/","link":"","permalink":"http://example.com/2020/10/12/Tensors-Explained/","excerpt":"","text":"张量 什么是张量 A tensor is the primary data structure used by neural networks. 张量是多维数组 张量的三个基本属性 Rank (秩，张量的秩是指张量中存在的维数) Axes (轴) Shape (形状) 对三个基本属性的解释 Rank The rank of a tensor refers to the number of dimensions present within the tensor. 当我们知道一个张量的秩时可以确定需要多少索引来表示张量中特定的元素。 Axes An axis of a tensor is a specific dimension of a tensor. 如果我们有一个秩为2的张量，那就意味着这个张量的维度为2，且轴的个数为2。 如果我们知道了每个轴的轴长那么就可以确定该张量的形状。 Shape The shape of a tensor gives us the length of each axis of the tensor. &gt; dd = [ [1,2,3], [4,5,6], [7,8,9] ] &gt; t = torch.tensor(dd) &gt; t tensor([ [1,2,3], [4,5,6], [7,8,9] ]) &gt; type(t) torch.Tensor # Now, we have a torch.Tensor object, and so we can ask to see the tensor&#39;s shape: &gt; t.shape torch.Size([3,3])","categories":[{"name":"pytorch基础","slug":"pytorch基础","permalink":"http://example.com/categories/pytorch%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"pytorch","slug":"pytorch","permalink":"http://example.com/tags/pytorch/"}]},{"title":"Multivariate Linear Regression","slug":"Multivariate-Linear-Regression","date":"2020-09-25T10:15:15.000Z","updated":"2020-09-25T10:15:15.969Z","comments":true,"path":"2020/09/25/Multivariate-Linear-Regression/","link":"","permalink":"http://example.com/2020/09/25/Multivariate-Linear-Regression/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"几何变换","slug":"几何变换","date":"2020-09-25T09:00:19.000Z","updated":"2020-09-25T09:12:17.427Z","comments":true,"path":"2020/09/25/几何变换/","link":"","permalink":"http://example.com/2020/09/25/%E5%87%A0%E4%BD%95%E5%8F%98%E6%8D%A2/","excerpt":"","text":"几何变换","categories":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/categories/opencv/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/tags/opencv/"},{"name":"图像处理","slug":"图像处理","permalink":"http://example.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]},{"title":"类型转换","slug":"类型转换","date":"2020-09-25T08:40:30.000Z","updated":"2020-09-25T08:59:06.004Z","comments":true,"path":"2020/09/25/类型转换/","link":"","permalink":"http://example.com/2020/09/25/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","excerpt":"","text":"类型转换 将图像从一种类型转换成另一种类型 彩色转灰度 BGR转RGB 灰度转BGR …… 1.彩色图像转灰度图像 1234567import cv2a = cv2.imread(r&#x27;D:\\Chorme\\lena512color.tiff&#x27;)b = cv2.cvtColor(a,cv2.COLOR_BGR2GRAY)cv2.imshow(&quot;lenaColor&quot;,a)cv3.imshow(&quot;leanGray&quot;,b)cv2.waitKey()cv2.destroyAllWindows() 2.BGR图像转RGB图像 1234567import cv2a = cv2.imread(r&#x27;D:\\Chorme\\lena512color.tiff&#x27;)b = cv2.cvtColor(a,cv2.COLOR_BGR2RGB)cv2.imshow(&quot;lenaBGR&quot;,a)cv3.imshow(&quot;leanRGB&quot;,b)cv2.waitKey()cv2.destroyAllWindows() 3.灰度图像转BGR图像 1234567import cv2a = cv2.imread(r&#x27;D:\\Chorme\\lena512color.tiff&#x27;)b = cv2.cvtColor(a,cv2.COLOR_GRAY2BGR)cv2.imshow(&quot;lenaGRAY&quot;,a)cv3.imshow(&quot;leanBGR&quot;,b)cv2.waitKey()cv2.destroyAllWindows()","categories":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/categories/opencv/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/tags/opencv/"},{"name":"图像处理","slug":"图像处理","permalink":"http://example.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]},{"title":"图像运算","slug":"图像运算","date":"2020-09-25T08:06:24.000Z","updated":"2020-09-25T08:38:00.076Z","comments":true,"path":"2020/09/25/图像运算/","link":"","permalink":"http://example.com/2020/09/25/%E5%9B%BE%E5%83%8F%E8%BF%90%E7%AE%97/","excerpt":"","text":"图像运算 图像加法 Numpy加法 取模加法&ensp; 运算方式：结果 = 图像1 + 图像2&ensp; 取模加法的运算方式如下图所示： OpenCV加法 饱和运算&ensp; 运算方式：结果 = cv2.add(图像1，图像2)&ensp; 饱和运算方式如下图所示: Numpy加法与OpenCV加法比较产生此结果的原因，对于OpenCV加法，如果像素点的值相加超过255即取255，即为白色。而对于Numpy加法如果像素点的值相加超过255即取模，这样会比原像素点变得更黑。 参与运算的图像大小、类型必须一致。 import cv2 import numpy as np a = cv2.imread(r&#39;D:Chorme\\lena512.bmp&#39;) b = a result1 = a+b result = cv2.add(a,b) cv2.imshow(&quot;original&quot;,a) cv2.imshow(&quot;result1&quot;,result1) cv2.imshow(&quot;result2&quot;,result2) cv2.waitKey() cv2.destroyAllWindows() 图像融合 将2张或2张以上的图像信息融合到一张图像上。图像融合的作用如下图所示： 结果图像 = 图像1 * 系数1 + 图像2 * 系数2 + 亮度调节量 所用到的函数 addWeighted()dst = cv2.addWeighted(src1,alpha,src2,beta,gamma)(注意！！！！参数gamma不能省略)","categories":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/categories/opencv/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/tags/opencv/"},{"name":"图像处理","slug":"图像处理","permalink":"http://example.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]},{"title":"图像处理基础","slug":"图像处理基础","date":"2020-09-25T05:40:01.000Z","updated":"2020-09-25T08:01:15.682Z","comments":true,"path":"2020/09/25/图像处理基础/","link":"","permalink":"http://example.com/2020/09/25/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/","excerpt":"","text":"图像处理基础 图像处理入门基础 图像分类 二值图像 灰度图像 RGB图像 (在OpenCV中，彩色图像的表示顺序为BGR) 像素处理 读取像素p = img[88,132]彩色图像123blue = img[88,132,0]green = img[88,132,1]red = img[88,132,2] 修改像素值img[88,132] = 255彩色图像 12345678910111213141516171819202122232425262728293031323334353637 img[88,132,0] = 255 img[88,132,1] = 255 img[88,132,2] = 255 ``` 或 `img[88,132] = [255,255,255]` - 使用Numpy访问像素 - 读取像素 灰度图像 `p = img.item(88,142)` 彩色图像 `blue = img.item(88,142,0) ...` - 修改像素值 `img.itemset((88,99),255)` - 获取图像属性&amp;ensp; shape 可以获取图像的形状，返回包括行数、列数、通道数的元组&amp;ensp; size可以获取图像像素的数目&amp;ensp; dtype返回的是图像的数据类型 - 图像ROI![](https://s1.ax1x.com/2020/09/25/09yYcT.png)&amp;ensp; 图像ROI即取出一幅图像中感兴趣的区域，如上图所示，我们取出的感兴趣区域 及为图中的蓝色区域,代码块如下所示:```pythonimport cv2img = cv2.imread(&quot;图像名称&quot;)face = img[200:400,200:400]``` - 通道的拆分与合并 - 拆分通道 ```python import cv2 img = cv2.imread(&quot;图像名称&quot;) b,g,r = cv2.split(img) 或12b = cv2.split(img)[0]g = cv2.split(img)[1] 合并通道m = cv2.merge([b,g,r]) &ensp; 将B通道和两个全是零的通道合并 1234567891011import cv2import numpy as npa = cv2.imread(r&#x27;D:\\Chorme\\lena512color.tiff&#x27;)rows,cols,chn = a.shapeb = cv2.split(a)[0]g = np.zeros((rows,cols),dtype=a.dtype)r = np.zeros((rows,cols),dtype=a.dtype)m = cv2.merge([b,g,r])cv2.imshow(&quot;merge&quot;,m)cv2.waitKey()cv2.destroyAllWindows() &ensp; 得到的结果如下图所示:","categories":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/categories/opencv/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"http://example.com/tags/opencv/"},{"name":"图像处理","slug":"图像处理","permalink":"http://example.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]}],"categories":[{"name":"pytorch基础","slug":"pytorch基础","permalink":"http://example.com/categories/pytorch%E5%9F%BA%E7%A1%80/"},{"name":"opencv","slug":"opencv","permalink":"http://example.com/categories/opencv/"}],"tags":[{"name":"pytorch","slug":"pytorch","permalink":"http://example.com/tags/pytorch/"},{"name":"opencv","slug":"opencv","permalink":"http://example.com/tags/opencv/"},{"name":"图像处理","slug":"图像处理","permalink":"http://example.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]}